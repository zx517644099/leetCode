package GroupAnagrams_012;

import java.util.Iterator;
import java.util.LinkedList;

/**
 * 给定数组和值，删除该值的所有实例并返回新的长度。
 * <p>
 * 不要为另一个数组分配额外的空间，您必须使用常量内存来执行此操作。
 * <p>
 * 元素的顺序可以改变。 无论你离开新的长度什么都不重要。
 */
public class Solution {

    public static void main(String[] args) {
        int[] ints1 = {373,799,118,677,305,392,912,539,348,516,400,678,593,723,658,977,65,77,182,268,
                285,145,323,975,928,984,320,272,254,809,548,229,411,189,466,637,846,940,736,
                39,306,434,328,398,962,368,656,587,222,852,95,276,229,473,138,812,663,598,373,
                593,567,979,156,356,416,267,959,777,776,802,703,427,967,135,934,800,846,254,282,
                658,992,500,567,102,272,121,699,516,436,290,381,486,551,79,221,923,986,936,74,8,
                482,662,725,832,142,350,221,78,580,260,925,489,93,869,50,81,676,714,156,255,
                471,75,117,416,311,64,224,91,952,517,466,560,50,298,204,441,473,131,904,952,132,
                482,76,208,682,451,145,909,198,196,365,415,435,907,781,516,601,598,252,118,903,374,863,
                722,194,265,299,577,337,299,64,646,496,865,377,759,307,890,678,788,261,824,411,67,143,693,876,
                860,950,56,137,495,219,298,796,901,986,377,165,589,195,816,977,173,792,753,363,44,514,216,15,457,
                964,166,559,404,702,280,56,798,29,879,709,618,251,61,81,20,131,778,748,726,824,
                805,695,307,947,134,73,503,28,410,364,390,45,901,711,827,357,427,109,936,368,376,432,609,58,520,808,570,341,264,268,16};
        int number = 2;
        System.out.println(twoSum(ints1, number));
    }

    public static int twoSum(int[] nums, int number) {
        if (nums == null || nums.length == 0) {
            return -1;
        }
        int falg = -1;
        for (int i = 0; i < nums.length; i++) {
            if (number != nums[i]) {
                falg = nums[i];
                for (int j = 0; j < nums.length; j++) {
                    if (i != j) {
                        if (nums[i] == nums[j]) {
                            falg = -1;
                            break;
                        }
                    }
                }
                if (i == nums.length - 1) {
                    falg = -1;
                }
                if (falg != -1) {
                    break;
                }
            } else {
                break;
            }
        }
        return falg;
    }

}
